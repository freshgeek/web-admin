package ${package.Controller};

#set($argserviceName = $table.serviceName.substring(0,1).toLowerCase() + $table.serviceName.substring(1))
#set($argentityName = $entity.substring(0,1).toLowerCase() + $entity.substring(1))

import org.springframework.web.bind.annotation.RequestMapping;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api(tags = "[$!{table.comment}]模块 前端接口(${date})")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen.replaceAll('-','/')}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

        @Autowired
        private ${table.serviceName} ${argserviceName};


        @ApiOperation(value = "基础方法:新增", notes = "基础方法:新增")
        @PostMapping(value = "/insert")
        public ResponseResult<?> insert(${entity} ${argentityName}) {
                return ${argserviceName}.insert(${argentityName}) ? ResponseResult.success() : ResponseResult.error();
		}

        @ApiOperation(value = "基础方法:删除", notes = "基础方法:删除")
        @DeleteMapping(value = "/delete")
        public ResponseResult<?> delete(${entity} ${argentityName}) {
                throw new IllegalArgumentException("暂不支持");
        //		return ${argserviceName}.deleteById(${argentityName}.getId())? ResponseResult.success() : ResponseResult.error();
		}

        @ApiOperation(value = "基础方法:修改", notes = "基础方法:修改")
        @PostMapping(value = "/update")
        public ResponseResult<?> update(${entity} ${argentityName}) {
            return ${argserviceName}.updateById(${argentityName}) ? ResponseResult.success() : ResponseResult.error();
		}

        @ApiOperation(value = "基础方法:分页", notes = "基础方法:分页")
        @PostMapping(value = "/page")
        public ResponseResult<?> page(${entity} ${argentityName}) {
            return ResponseResult.success(${argserviceName}
            .selectPage(${argentityName}.page()
            , new EntityWrapper<>(${argentityName})));
		}

        @ApiOperation(value = "基础方法:列表", notes = "基础方法:列表")
        @GetMapping(value = "/list")
        public ResponseResult<?> list(${entity} ${argentityName}) {
            return ResponseResult.success(${argserviceName}
                        .selectList(new EntityWrapper<>(${argentityName})));
		}

        @ApiOperation(value = "基础方法:查询", notes = "基础方法:查询")
        @GetMapping(value = "/find/{id}")
        public ResponseResult<?> page(@PathVariable("id") Serializable id) {
            return ResponseResult.success(${argserviceName}.selectById(id));
		}

}

#end